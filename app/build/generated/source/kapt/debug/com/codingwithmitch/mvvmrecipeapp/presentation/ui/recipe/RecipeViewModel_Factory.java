// Generated by Dagger (https://dagger.dev).
package com.codingwithmitch.mvvmrecipeapp.presentation.ui.recipe;

import androidx.lifecycle.SavedStateHandle;
import com.codingwithmitch.mvvmrecipeapp.repository.RecipeRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RecipeViewModel_Factory implements Factory<RecipeViewModel> {
  private final Provider<RecipeRepository> recipeRepositoryProvider;

  private final Provider<String> tokenProvider;

  private final Provider<SavedStateHandle> stateProvider;

  public RecipeViewModel_Factory(Provider<RecipeRepository> recipeRepositoryProvider,
      Provider<String> tokenProvider, Provider<SavedStateHandle> stateProvider) {
    this.recipeRepositoryProvider = recipeRepositoryProvider;
    this.tokenProvider = tokenProvider;
    this.stateProvider = stateProvider;
  }

  @Override
  public RecipeViewModel get() {
    return newInstance(recipeRepositoryProvider.get(), tokenProvider.get(), stateProvider.get());
  }

  public static RecipeViewModel_Factory create(Provider<RecipeRepository> recipeRepositoryProvider,
      Provider<String> tokenProvider, Provider<SavedStateHandle> stateProvider) {
    return new RecipeViewModel_Factory(recipeRepositoryProvider, tokenProvider, stateProvider);
  }

  public static RecipeViewModel newInstance(RecipeRepository recipeRepository, String token,
      SavedStateHandle state) {
    return new RecipeViewModel(recipeRepository, token, state);
  }
}
