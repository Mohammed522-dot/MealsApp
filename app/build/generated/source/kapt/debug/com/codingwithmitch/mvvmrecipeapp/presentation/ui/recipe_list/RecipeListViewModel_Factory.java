// Generated by Dagger (https://dagger.dev).
package com.codingwithmitch.mvvmrecipeapp.presentation.ui.recipe_list;

import androidx.lifecycle.SavedStateHandle;
import com.codingwithmitch.mvvmrecipeapp.repository.RecipeRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RecipeListViewModel_Factory implements Factory<RecipeListViewModel> {
  private final Provider<RecipeRepository> repositoryProvider;

  private final Provider<String> tokenProvider;

  private final Provider<SavedStateHandle> savedStateHandleProvider;

  public RecipeListViewModel_Factory(Provider<RecipeRepository> repositoryProvider,
      Provider<String> tokenProvider, Provider<SavedStateHandle> savedStateHandleProvider) {
    this.repositoryProvider = repositoryProvider;
    this.tokenProvider = tokenProvider;
    this.savedStateHandleProvider = savedStateHandleProvider;
  }

  @Override
  public RecipeListViewModel get() {
    return newInstance(repositoryProvider.get(), tokenProvider.get(), savedStateHandleProvider.get());
  }

  public static RecipeListViewModel_Factory create(Provider<RecipeRepository> repositoryProvider,
      Provider<String> tokenProvider, Provider<SavedStateHandle> savedStateHandleProvider) {
    return new RecipeListViewModel_Factory(repositoryProvider, tokenProvider, savedStateHandleProvider);
  }

  public static RecipeListViewModel newInstance(RecipeRepository repository, String token,
      SavedStateHandle savedStateHandle) {
    return new RecipeListViewModel(repository, token, savedStateHandle);
  }
}
