// Generated by Dagger (https://dagger.dev).
package com.codingwithmitch.mvvmrecipeapp.di;

import com.codingwithmitch.mvvmrecipeapp.network.RecipeService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideRecipeServiceFactory implements Factory<RecipeService> {
  @Override
  public RecipeService get() {
    return provideRecipeService();
  }

  public static NetworkModule_ProvideRecipeServiceFactory create() {
    return InstanceHolder.INSTANCE;
  }

  public static RecipeService provideRecipeService() {
    return Preconditions.checkNotNullFromProvides(NetworkModule.INSTANCE.provideRecipeService());
  }

  private static final class InstanceHolder {
    private static final NetworkModule_ProvideRecipeServiceFactory INSTANCE = new NetworkModule_ProvideRecipeServiceFactory();
  }
}
