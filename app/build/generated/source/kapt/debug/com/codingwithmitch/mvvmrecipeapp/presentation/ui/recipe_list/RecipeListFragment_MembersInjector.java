// Generated by Dagger (https://dagger.dev).
package com.codingwithmitch.mvvmrecipeapp.presentation.ui.recipe_list;

import com.codingwithmitch.mvvmrecipeapp.presentation.BaseApplication;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RecipeListFragment_MembersInjector implements MembersInjector<RecipeListFragment> {
  private final Provider<BaseApplication> applicationProvider;

  public RecipeListFragment_MembersInjector(Provider<BaseApplication> applicationProvider) {
    this.applicationProvider = applicationProvider;
  }

  public static MembersInjector<RecipeListFragment> create(
      Provider<BaseApplication> applicationProvider) {
    return new RecipeListFragment_MembersInjector(applicationProvider);
  }

  @Override
  public void injectMembers(RecipeListFragment instance) {
    injectApplication(instance, applicationProvider.get());
  }

  @InjectedFieldSignature("com.codingwithmitch.mvvmrecipeapp.presentation.ui.recipe_list.RecipeListFragment.application")
  public static void injectApplication(RecipeListFragment instance, BaseApplication application) {
    instance.application = application;
  }
}
